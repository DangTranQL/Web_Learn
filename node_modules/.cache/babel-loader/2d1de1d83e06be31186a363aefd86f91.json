{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\todo-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: \"task_1\",\n    title: \"Learn Js fundamental\",\n    status: 0\n  }, {\n    id: \"task_2\",\n    title: \"Code a Todo List\",\n    status: 0\n  }]);\n  const [showIncomlete, setShowIncomplete] = useState(false);\n  const [newTask, setnewTask] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newTask) {\n      const task = {\n        id: Date.now(),\n        title: newTask,\n        status: 0\n      };\n      setTasks([...tasks, task]);\n      setnewTask(\"\");\n    }\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    setnewTask(e.target.value);\n  };\n\n  const setTaskStatus = (staskId, status) => {\n    setTasks(tasks.map(task => {\n      if (task.id === staskId) {\n        return { ...task,\n          status: status ? 1 : 0\n        };\n      }\n\n      return task;\n    }));\n  };\n\n  const removeTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Todo List\",\n      subTitle: \"Get things done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      showIncomlete: showIncomlete,\n      setTaskStatus: setTaskStatus,\n      removeTask: removeTask,\n      setShowIncomplete: setShowIncomplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      handleSubmit: handleSubmit,\n      handleInputChange: handleInputChange,\n      newTask: newTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"J3kXQe4850nKK93GWC3E/8O+qmg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/todo-list/src/App.js"],"names":["React","useState","Header","TaskList","AddTaskForm","App","tasks","setTasks","id","title","status","showIncomlete","setShowIncomplete","newTask","setnewTask","handleSubmit","e","preventDefault","task","Date","now","handleInputChange","target","value","setTaskStatus","staskId","map","removeTask","taskId","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AAAEO,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,KAAK,EAAE,sBAAvB;AAA+CC,IAAAA,MAAM,EAAE;AAAvD,GADiC,EAEjC;AAAEF,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,KAAK,EAAE,kBAAvB;AAA2CC,IAAAA,MAAM,EAAE;AAAnD,GAFiC,CAAD,CAAlC;AAKA,QAAM,CAACC,aAAD,EAAgBC,iBAAhB,IAAqCX,QAAQ,CAAC,KAAD,CAAnD;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,OAAJ,EAAa;AACX,YAAMK,IAAI,GAAG;AACXV,QAAAA,EAAE,EAAEW,IAAI,CAACC,GAAL,EADO;AAEXX,QAAAA,KAAK,EAAEI,OAFI;AAGXH,QAAAA,MAAM,EAAE;AAHG,OAAb;AAKAH,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWY,IAAX,CAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAXD;;AAaA,QAAMO,iBAAiB,GAAIL,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAV;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,CAACC,OAAD,EAAUf,MAAV,KAAqB;AACzCH,IAAAA,QAAQ,CACND,KAAK,CAACoB,GAAN,CAAWR,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACV,EAAL,KAAYiB,OAAhB,EAAyB;AACvB,eAAO,EAAE,GAAGP,IAAL;AAAWR,UAAAA,MAAM,EAAEA,MAAM,GAAG,CAAH,GAAO;AAAhC,SAAP;AACD;;AACD,aAAOQ,IAAP;AACD,KALD,CADM,CAAR;AAQD,GATD;;AAWA,QAAMS,UAAU,GAAIC,MAAD,IAAY;AAC7BrB,IAAAA,QAAQ,CAACD,KAAK,CAACuB,MAAN,CAAcX,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYoB,MAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEtB,KADT;AAEE,MAAA,aAAa,EAAEK,aAFjB;AAGE,MAAA,aAAa,EAAEa,aAHjB;AAIE,MAAA,UAAU,EAAEG,UAJd;AAKE,MAAA,iBAAiB,EAAEf;AALrB;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,WAAD;AACE,MAAA,YAAY,EAAEG,YADhB;AAEE,MAAA,iBAAiB,EAAEM,iBAFrB;AAGE,MAAA,OAAO,EAAER;AAHX;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5DQR,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport AddTaskForm from \"./components/AddTaskForm\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([\r\n    { id: \"task_1\", title: \"Learn Js fundamental\", status: 0 },\r\n    { id: \"task_2\", title: \"Code a Todo List\", status: 0 },\r\n  ]);\r\n\r\n  const [showIncomlete, setShowIncomplete] = useState(false);\r\n\r\n  const [newTask, setnewTask] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newTask) {\r\n      const task = {\r\n        id: Date.now(),\r\n        title: newTask,\r\n        status: 0,\r\n      };\r\n      setTasks([...tasks, task]);\r\n      setnewTask(\"\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    setnewTask(e.target.value);\r\n  };\r\n\r\n  const setTaskStatus = (staskId, status) => {\r\n    setTasks(\r\n      tasks.map((task) => {\r\n        if (task.id === staskId) {\r\n          return { ...task, status: status ? 1 : 0 };\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeTask = (taskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header title=\"Todo List\" subTitle=\"Get things done\" />\r\n      <TaskList\r\n        tasks={tasks}\r\n        showIncomlete={showIncomlete}\r\n        setTaskStatus={setTaskStatus}\r\n        removeTask={removeTask}\r\n        setShowIncomplete={setShowIncomplete}\r\n      />\r\n      <AddTaskForm\r\n        handleSubmit={handleSubmit}\r\n        handleInputChange={handleInputChange}\r\n        newTask={newTask}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}