{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\todo-list\\\\src\\\\components\\\\TaskList.js\";\nimport React from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(_ref) {\n  let {\n    tasks,\n    showIncomlete,\n    setTaskStatus,\n    removeTask,\n    setShowIncomplete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.filter(task => showIncomlete ? task.status !== 1 : true).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        setTaskStatus: setTaskStatus,\n        removeTask: removeTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        className: \"filter-label\",\n        children: \"Show incompleted tasks only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setShowIncomplete(e.target.checked),\n        type: \"checkbox\",\n        id: \"filter\",\n        checked: showIncomlete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/todo-list/src/components/TaskList.js"],"names":["React","TaskItem","TaskList","tasks","showIncomlete","setTaskStatus","removeTask","setShowIncomplete","filter","task","status","map","id","e","target","checked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,OAMG;AAAA,MANe;AAChBC,IAAAA,KADgB;AAEhBC,IAAAA,aAFgB;AAGhBC,IAAAA,aAHgB;AAIhBC,IAAAA,UAJgB;AAKhBC,IAAAA;AALgB,GAMf;AACD,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACGJ,KAAK,CACHK,MADF,CACUC,IAAD,IAAWL,aAAa,GAAGK,IAAI,CAACC,MAAL,KAAgB,CAAnB,GAAuB,IADxD,EAEEC,GAFF,CAEOF,IAAD,iBACH,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,aAAa,EAAEJ,aAHjB;AAIE,QAAA,UAAU,EAAEC;AAJd,SACOG,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,cAHH;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAON,iBAAiB,CAACM,CAAC,CAACC,MAAF,CAASC,OAAV,CADpC;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,EAAE,EAAC,QAHL;AAIE,QAAA,OAAO,EAAEX;AAJX;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;KAlCQF,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nfunction TaskList({\r\n  tasks,\r\n  showIncomlete,\r\n  setTaskStatus,\r\n  removeTask,\r\n  setShowIncomplete,\r\n}) {\r\n  return (\r\n    <div>\r\n      <ul className=\"task-list\">\r\n        {tasks\r\n          .filter((task) => (showIncomlete ? task.status !== 1 : true))\r\n          .map((task) => (\r\n            <TaskItem\r\n              key={task.id}\r\n              task={task}\r\n              setTaskStatus={setTaskStatus}\r\n              removeTask={removeTask}\r\n            />\r\n          ))}\r\n      </ul>\r\n      <div className=\"filter-wrapper\">\r\n        <label htmlFor=\"filter\" className=\"filter-label\">\r\n          Show incompleted tasks only\r\n        </label>\r\n        <input\r\n          onChange={(e) => setShowIncomplete(e.target.checked)}\r\n          type=\"checkbox\"\r\n          id=\"filter\"\r\n          checked={showIncomlete}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}